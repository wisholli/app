{"version":3,"file":"static/js/44.ae58c58e.chunk.js","mappings":"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","sources":["components/Homepage/Posts/Post.module.css","webpack://rest/./src/components/Homepage/Posts/Post/Post.module.css?487d","components/Homepage/Posts/Post/Post.jsx","components/Homepage/Posts/AddPostForm.jsx","components/Homepage/Posts/Posts.jsx","components/Homepage/Posts/PostsContainer.jsx","components/Homepage/ProfileStatusWithHooks.jsx","components/Homepage/UserProfile/UserProfile.jsx","components/Homepage/Homepage.jsx","components/Homepage/HomepageContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__8yXKp\",\"img\":\"Post_img__6a0BR\",\"description\":\"Post_description__1QTOI\"};","import style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.content}>\r\n            <img className={style.img} src='https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.kindpng.com%2Fpicc%2Fm%2F105-1055656_account-user-profile-avatar-avatar-user-profile-icon.png&f=1&nofb=1'/>\r\n            <p className={style.description}>{ props.message }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newPostText\"}\r\n          placeholder={\"Write post\"}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"addPost\" })(AddPostForm);\r\n","import style from \"./Post.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst Posts = (props) => {\r\n  let postElemets = props.posts.map((post) => <Post message={post.message} />);\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div className={style.content}>\r\n      <h1 className={style.title}>Posts</h1>\r\n      <AddPostForm onSubmit={onSubmit} />\r\n      <div className={style.post}>{postElemets}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/postsReducer\";\r\nimport Posts from \"./Posts\";\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts.data,\r\n  };\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, { addPost })(Posts);\r\n\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {!props.status ? \"---\" : props.status}\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            value={status}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst UserProfile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src={props.profile.photos.small} alt=\"\" />\r\n      </div>\r\n      <div>{props.profile.fullName}</div>\r\n      <ProfileStatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <div>{props.profile.aboutMe}</div>\r\n      <div>\r\n        {!props.profile.lookingForAJob ? \"Find job: NO\" : \"Find job: YES\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport UserProfile from \"./UserProfile/UserProfile\";\r\n\r\nconst Homepage = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <UserProfile\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n      <div>\r\n        <PostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Homepage from \"./Homepage\";\r\nimport {\r\n  setUserProfileTC,\r\n  getUserStatus,\r\n  updateUserStatusTC,\r\n} from \"../../redux/userProfileReducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass HomepageContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n\r\n    this.props.setUserProfileTC(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Homepage {...this.props} updateStatus={this.props.updateUserStatusTC} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.userProfile.profile,\r\n  status: state.userProfile.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfileTC,\r\n    getUserStatus,\r\n    updateUserStatusTC,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(HomepageContainer);\r\n"],"names":["props","className","style","src","message","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postElemets","posts","map","post","values","addPost","newPostText","connect","state","data","Posts","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","profile","photos","small","alt","fullName","aboutMe","lookingForAJob","Preloader","HomepageContainer","userId","this","router","params","authorizedUserId","setUserProfileTC","getUserStatus","updateUserStatusTC","React","compose","userProfile","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}